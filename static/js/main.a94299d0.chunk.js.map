{"version":3,"sources":["serviceWorker.ts","index.tsx","CompApp.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","react_default","a","createElement","CompApp","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","_Component","props","_this","Object","C_Workspaces_TS_meg_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Workspaces_TS_meg_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Workspaces_TS_meg_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","onAnswerChanged","e","setState","answer","currentTarget","value","onSubmitted","preventDefault","trim","replace","correctAnswer","makeQuestion","isWrong","question","questionNumber","C_Workspaces_TS_meg_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Workspaces_TS_meg_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","react__WEBPACK_IMPORTED_MODULE_5___default","className","onSubmit","filter","join","type","onChange","componentCount","random","sum","i","compValue","compString","withSign","nestCount","j","Math","multi","Intl","NumberFormat","format","min","max","frag","r","p","pow","floor","n","Component","displayName","__filename"],"mappings":"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","file":"static/js/main.a94299d0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bulma/css/bulma.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CompApp } from './CompApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<CompApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n","import React, { Component } from 'react';\n\nexport interface CompAppProps { }\nexport interface CompAppState {\n\tquestionNumber: number\n\tquestion: string\n\tcorrectAnswer: string\n\tanswer: string\n\tisWrong: boolean\n}\nexport interface CompAppSnapshot { }\n\nexport class CompApp extends Component<CompAppProps, CompAppState> {\n\tstatic displayName = __filename\n\n\tconstructor(props: CompAppProps) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tquestion: '',\n\t\t\tanswer: '',\n\t\t\tcorrectAnswer: '',\n\t\t\tisWrong: false,\n\t\t\tquestionNumber: 0,\n\t\t}\n\t}\n\t// componentWillMount() {}\n\t// getDerivedStateFromProps(nextProps: CompAppProps, prevState: CompAppState): CompAppState | null {}\n\t// shouldComponentUpdate(nextProps: CompAppProps, nextState: CompAppState): boolean {}\n\trender() {\n\t\treturn (\n\t\t\t<section className=\"section\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h1 className=\"title\">\n\t\t\t\t\t\t{`Meg`}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p className=\"subtitle\">\n\t\t\t\t\t\t{`${this.state.questionNumber}. kérdés: ${this.state.correctAnswer}`}\n\t\t\t\t\t</p>\n\t\t\t\t\t{!this.state.isWrong && this.state.questionNumber > 1 &&\n\t\t\t\t\t\t<article className=\"message is-success\">\n\t\t\t\t\t\t\t<div className=\"message-body\">\n\t\t\t\t\t\t\t\t{`Helyes válasz!`}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</article>\n\t\t\t\t\t}\n\t\t\t\t\t<form onSubmit={this.onSubmitted}>\n\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t<label className=\"label\">{this.state.question}</label>\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tclassName={['input', this.state.isWrong && 'is-danger'].filter(Boolean).join(' ')}\n\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\tvalue={this.state.answer}\n\t\t\t\t\t\t\t\t\tonChange={this.onAnswerChanged}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{this.state.isWrong &&\n\t\t\t\t\t\t\t\t<p className=\"help is-danger\">Hibás válasz</p>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"field is-grouped\">\n\t\t\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName=\"button is-link\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{`Kész`}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.makeQuestion()\n\t}\n\t// getSnapshotBeforeUpdate(prevProps: CompAppProps, prevState: CompAppState): CompAppSnapshot {}\n\t// componentDidUpdate(prevProps: CompAppProps, prevState: CompAppState, snapshot: CompAppSnapshot) {}\n\t// componentWillUnmount() {}\n\n\tonAnswerChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tthis.setState({\n\t\t\tanswer: e.currentTarget.value,\n\t\t})\n\t}\n\n\tonSubmitted = (e: React.FormEvent) => {\n\t\te.preventDefault()\n\t\tconst answer = this.state.answer.trim().replace(/^\\+/, '')\n\t\tif (answer === this.state.correctAnswer) {\n\t\t\tthis.makeQuestion()\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tisWrong: true,\n\t\t\t})\n\t\t}\n\t}\n\n\tmakeQuestion() {\n\t\tconst componentCount = this.random(3, 5)\n\t\tlet sum = 0\n\t\tlet question = ''\n\t\tfor (let i = 0; i < componentCount; i++) {\n\t\t\tlet compValue = this.random(-99, 99, true)\n\t\t\tlet compString = this.withSign(compValue)\n\t\t\tconst nestCount = this.random(0, 2)\n\t\t\tfor (let j = 0; j < nestCount; j++) {\n\t\t\t\tconst isNegative = Math.random() < .5\n\t\t\t\tif (isNegative) {\n\t\t\t\t\tcompValue = -compValue\n\t\t\t\t\tcompString = `-(${compString})`\n\t\t\t\t} else {\n\t\t\t\t\tcompString = `+(${compString})`\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst multi = Math.random() < .33 ? this.random(-3, 3) : 0\n\t\t\tif (multi) {\n\t\t\t\tcompValue *= multi\n\t\t\t\tconst before = Math.random() < .5\n\t\t\t\tif (before) {\n\t\t\t\t\tcompString = `${this.withSign(multi)}·(${compString})`\n\t\t\t\t} else {\n\t\t\t\t\tcompString = `${compString}·(${this.withSign(multi)})`\n\t\t\t\t}\n\t\t\t}\n\t\t\tquestion += compString\n\t\t\tsum += compValue\n\t\t}\n\t\tquestion += '='\n\t\tconst correctAnswer = new Intl.NumberFormat('hu-HU').format(sum)\n\t\tthis.setState(state => ({\n\t\t\tquestionNumber: state.questionNumber + 1,\n\t\t\tanswer: '',\n\t\t\tisWrong: false,\n\t\t\tquestion,\n\t\t\tcorrectAnswer,\n\t\t}))\n\t}\n\n\trandom(min: number, max: number, frag?: boolean) {\n\t\tlet r = min + Math.random() * (max + 1 - min)\n\t\tif (frag) {\n\t\t\tconst p = 10 ** this.random(0, 3)\n\t\t\tr = Math.floor(r * p) / p\n\t\t} else {\n\t\t\tr = Math.floor(r)\n\t\t}\n\t\treturn r\n\t}\n\n\twithSign(n: number) {\n\t\treturn (n >= 0 ? '+' : '') + new Intl.NumberFormat('hu-HU').format(n)\n\t}\n}\n"],"sourceRoot":""}